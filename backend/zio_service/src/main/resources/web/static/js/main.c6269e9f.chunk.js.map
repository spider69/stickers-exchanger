{"version":3,"sources":["libs/contextLib.js","libs/errorLib.js","containers/Home.js","containers/NotFound.js","components/LoaderButton.js","libs/hooksLib.js","containers/Login.js","containers/Signup.js","components/AuthenticatedRoute.js","components/UnauthenticatedRoute.js","containers/Collections.js","containers/CollectionPage.js","containers/StickerPage.js","containers/UserPage.js","containers/Users.js","Routes.js","App.js","serviceWorker.js","index.js"],"names":["AppContext","createContext","useAppContext","useContext","onError","error","message","toString","Error","alert","handleErrors","response","ok","statusText","Home","history","useHistory","userId","className","push","replace","NotFound","LoaderButton","isLoading","disabled","props","Button","glyph","children","useFormFields","initialState","useState","fields","setValues","event","target","id","value","Login","setUserId","setIsLoading","login","password","handleFieldChange","handleLoginResponse","a","text","responseText","preventDefault","data","fetch","window","location","origin","method","headers","body","JSON","stringify","then","onSubmit","FormGroup","controlId","FormLabel","FormControl","autoFocus","type","onChange","block","length","Signup","userName","email","confirmPassword","handleSignUpResponse","errorMessage","reload","AuthenticatedRoute","rest","useLocation","pathname","search","to","UnauthenticatedRoute","Collections","query","URLSearchParams","collectionsRelations","setCollectionsRelations","currentUserId","get","collectionId","json","requestedCollectionsRelations","renderCollectionsList","loggedUserId","viewLoggedUser","concat","map","collectionRelation","i","Container","Row","Col","sm","key","collection","ListGroupItem","variant","belongsToUser","action","Image","src","image","thumbnail","name","description","onClick","onRemoveCollection","onAddCollection","size","undefined","useEffect","onLoad","ListGroup","CollectionPage","useParams","setCollection","stickers","setStickers","newFields","stickerId","stickersCounts","setStickersCounts","handleCountChange","user","setUser","collectionStickers","count","requestedUser","requestedCollection","stickersRelations","stickersCountsDict","forEach","stickerRelation","sticker","numberOfStickers","number","onRemoveSticker","onAddSticker","changed","handleUpdate","renderStickersList","StickerPage","setSticker","users","setUsers","requestedSticker","usersHavingSticker","renderUsersList","UserPage","collections","setCollections","userCollections","Users","requestedUsers","Routes","exact","path","App","isAuthenticating","setIsAuthenticating","handleCurrentSessionResponse","console","log","Navbar","expand","bg","Brand","href","Nav","Link","Provider","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.c6269e9f.chunk.js","sourcesContent":["import { useContext, createContext } from \"react\";\r\n\r\nexport const AppContext = createContext(null);\r\n\r\nexport function useAppContext() {\r\n  return useContext(AppContext);\r\n}","export function onError(error) {\r\n    let message = error.toString();\r\n  \r\n    // Auth errors\r\n    if (!(error instanceof Error) && error.message) {\r\n      message = error.message;\r\n    }\r\n  \r\n    alert(message);\r\n  }\r\n\r\nexport function handleErrors(response) {\r\n  if (!response.ok) {\r\n    throw Error(response.statusText);\r\n  }\r\n  return response;\r\n}","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useAppContext } from \"../libs/contextLib\";\r\nimport \"./Home.css\";\r\n\r\nexport default function Home() {\r\n  const history = useHistory();\r\n  const { userId } = useAppContext();\r\n\r\n  function renderLander() {\r\n    return (\r\n      <div className=\"lander\">\r\n        <h1>Welcome to stickers exchanger service!</h1>\r\n        <p>Click sign up to register</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  function redirectToUserPage() {\r\n    history.push(`/users/${userId.replace(/\"/g, \"\")}`);\r\n  }\r\n\r\n  return (\r\n    <div className=\"Home\">\r\n      {userId ? redirectToUserPage() : renderLander()}\r\n    </div>\r\n  );\r\n}","import React from \"react\";\r\nimport \"./NotFound.css\";\r\n\r\nexport default function NotFound() {\r\n  return (\r\n    <div className=\"NotFound\">\r\n      <h3>Sorry, page not found!</h3>\r\n    </div>\r\n  );\r\n}","import React from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport Glyphicon from '@strongdm/glyphicon'\r\nimport \"./LoaderButton.css\";\r\n\r\nexport default function LoaderButton({\r\n  isLoading,\r\n  className = \"\",\r\n  disabled = false,\r\n  ...props\r\n}) {\r\n  return (\r\n    <Button\r\n      className={`LoaderButton ${className}`}\r\n      disabled={disabled || isLoading}\r\n      {...props}\r\n    >\r\n      {isLoading && <Glyphicon glyph=\"refresh\" className=\"spinning\" />}\r\n      {props.children}\r\n    </Button>\r\n  );\r\n}","import { useState } from \"react\";\r\n\r\nexport function useFormFields(initialState) {\r\n  const [fields, setValues] = useState(initialState);\r\n\r\n  return [\r\n    fields,\r\n    function(event) {\r\n      setValues({\r\n        ...fields,\r\n        [event.target.id]: event.target.value\r\n      });\r\n    }\r\n  ];\r\n}","import React, { useState } from \"react\";\r\nimport { useAppContext } from \"../libs/contextLib\";\r\nimport { FormGroup, FormControl, FormLabel } from \"react-bootstrap\";\r\nimport LoaderButton from \"../components/LoaderButton\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useFormFields } from \"../libs/hooksLib\";\r\nimport { onError } from \"../libs/errorLib\";\r\nimport \"./Login.css\";\r\n\r\n\r\nexport default function Login() {\r\n    const history = useHistory();\r\n    const { setUserId } = useAppContext();\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [fields, handleFieldChange] = useFormFields({\r\n        login: \"\",\r\n        password: \"\"\r\n    });\r\n\r\n    function validateForm() {\r\n        return fields.login.length > 0 && fields.password.length > 0;\r\n    }\r\n\r\n    async function handleLoginResponse(response) {\r\n        let responseText = await response.text()\r\n        if (!response.ok) {\r\n            throw Error(responseText);\r\n        }\r\n        return responseText;\r\n    }\r\n\r\n    async function handleSubmit(event) {\r\n        event.preventDefault();\r\n\r\n        setIsLoading(true);\r\n\r\n        try {\r\n            let data = { \"login\": fields.login, \"password\": fields.password }\r\n            let userId = await fetch(`${window.location.origin}/api/auth/sign_in`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(data)\r\n            }).then(handleLoginResponse)\r\n            setUserId(userId)\r\n            history.push(\"/\");\r\n        } catch (e) {\r\n            onError(e);\r\n            setIsLoading(false);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"Login\">\r\n            <form onSubmit={handleSubmit}>\r\n                <FormGroup controlId=\"login\">\r\n                    <FormLabel>Login</FormLabel>\r\n                    <FormControl\r\n                        autoFocus\r\n                        type=\"text\"\r\n                        value={fields.login}\r\n                        onChange={handleFieldChange}\r\n                    />\r\n                </FormGroup>\r\n                <FormGroup controlId=\"password\">\r\n                    <FormLabel>Password</FormLabel>\r\n                    <FormControl\r\n                        type=\"password\"\r\n                        value={fields.password}\r\n                        onChange={handleFieldChange}\r\n                    />\r\n                </FormGroup>\r\n                <LoaderButton\r\n                    block\r\n                    type=\"submit\"\r\n                    isLoading={isLoading}\r\n                    disabled={!validateForm()}\r\n                >\r\n                    Login\r\n               </LoaderButton>\r\n            </form>\r\n        </div>\r\n    );\r\n}","import React, { useState } from \"react\";\r\nimport { FormGroup, FormControl, FormLabel } from \"react-bootstrap\";\r\nimport LoaderButton from \"../components/LoaderButton\";\r\nimport { useFormFields } from \"../libs/hooksLib\";\r\nimport { onError } from \"../libs/errorLib\";\r\nimport \"./Signup.css\";\r\n\r\nexport default function Signup() {\r\n    const [fields, handleFieldChange] = useFormFields({\r\n        userName: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        confirmPassword: \"\"\r\n    });\r\n\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    function validateForm() {\r\n        return (\r\n            fields.userName.length > 0 &&\r\n            fields.email.length > 0 &&\r\n            fields.password.length > 0 &&\r\n            fields.password === fields.confirmPassword\r\n        );\r\n    }\r\n\r\n    async function handleSignUpResponse(response) {\r\n        let errorMessage = await response.text()\r\n        if (!response.ok) {\r\n            throw Error(errorMessage);\r\n        }\r\n        return response;\r\n      }\r\n\r\n    async function handleSubmit(event) {\r\n        event.preventDefault();\r\n\r\n        setIsLoading(true);\r\n\r\n        try {\r\n            let data = { \"login\": fields.userName, \"email\": fields.email, \"password\": fields.password }\r\n            await fetch(`${window.location.origin}/api/auth/sign_up`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(data)\r\n            }).then(handleSignUpResponse)\r\n            setIsLoading(false);\r\n            window.location.reload(false);\r\n        } catch (e) {\r\n            onError(e)\r\n            setIsLoading(false);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"Signup\">\r\n            <form onSubmit={handleSubmit}>\r\n                <FormGroup controlId=\"userName\">\r\n                    <FormLabel>User name</FormLabel>\r\n                    <FormControl\r\n                        autoFocus\r\n                        type=\"text\"\r\n                        value={fields.userName}\r\n                        onChange={handleFieldChange}\r\n                    />\r\n                </FormGroup>\r\n                <FormGroup controlId=\"email\">\r\n                    <FormLabel>Email</FormLabel>\r\n                    <FormControl\r\n                        type=\"email\"\r\n                        value={fields.email}\r\n                        onChange={handleFieldChange}\r\n                    />\r\n                </FormGroup>\r\n                <FormGroup controlId=\"password\">\r\n                    <FormLabel>Password</FormLabel>\r\n                    <FormControl\r\n                        type=\"password\"\r\n                        value={fields.password}\r\n                        onChange={handleFieldChange}\r\n                    />\r\n                </FormGroup>\r\n                <FormGroup controlId=\"confirmPassword\">\r\n                    <FormLabel>Confirm Password</FormLabel>\r\n                    <FormControl\r\n                        type=\"password\"\r\n                        onChange={handleFieldChange}\r\n                        value={fields.confirmPassword}\r\n                    />\r\n                </FormGroup>\r\n                <LoaderButton\r\n                    block\r\n                    type=\"submit\"\r\n                    isLoading={isLoading}\r\n                    disabled={!validateForm()}\r\n                >\r\n                    Sign up\r\n               </LoaderButton>\r\n            </form>\r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\nimport { Route, Redirect, useLocation } from \"react-router-dom\";\r\nimport { useAppContext } from \"../libs/contextLib\";\r\n\r\nexport default function AuthenticatedRoute({ children, ...rest }) {\r\n  const { pathname, search } = useLocation();\r\n  const { userId } = useAppContext();\r\n  return (\r\n    <Route {...rest}>\r\n      {userId ? (\r\n        children\r\n      ) : (\r\n        <Redirect to={\r\n          `/login?redirect=${pathname}${search}`\r\n        } />\r\n      )}\r\n    </Route>\r\n  );\r\n}","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { useAppContext } from \"../libs/contextLib\";\r\n\r\nexport default function UnauthenticatedRoute({ children, ...rest }) {\r\n  const { userId } = useAppContext();\r\n  return (\r\n    <Route {...rest}>\r\n      {!userId ? (\r\n        children\r\n      ) : (\r\n        <Redirect to=\"/\" />\r\n      )}\r\n    </Route>\r\n  );\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport { ListGroup, ListGroupItem, Button, Row, Col, Container } from \"react-bootstrap\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { useAppContext } from \"../libs/contextLib\";\r\nimport { handleErrors, onError } from \"../libs/errorLib\";\r\nimport Image from 'react-bootstrap/Image'\r\nimport \"./Collections.css\";\r\n\r\nfunction useQuery() {\r\n  return new URLSearchParams(useLocation().search);\r\n}\r\n\r\nexport default function Collections() {\r\n  const query = useQuery();\r\n  const [collectionsRelations, setCollectionsRelations] = useState([]);\r\n  const { userId } = useAppContext();\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  var currentUserId = query.get(\"userId\") \r\n  if (currentUserId === undefined) {\r\n      currentUserId = userId.replace(/\"/g, \"\")\r\n  }\r\n  \r\n  useEffect(() => {\r\n    async function onLoad() {\r\n      if (!userId) {\r\n        return;\r\n      }\r\n\r\n      try {\r\n        let requestedCollectionsRelations = await fetch(`${window.location.origin}/api/user/collections/relations?userId=${currentUserId}`)\r\n          .then(handleErrors)\r\n          .then(response => response.json())\r\n        setCollectionsRelations(requestedCollectionsRelations)\r\n      } catch (e) {\r\n        onError(e);\r\n      }\r\n  \r\n      setIsLoading(false);\r\n    }\r\n  \r\n    onLoad();\r\n  }, [userId, currentUserId]);\r\n\r\n  async function onAddCollection(collectionId) {\r\n    try {\r\n        await fetch(`${window.location.origin}/api/user/collections/${collectionId}`, {method: 'PUT'})\r\n            .then(handleErrors)\r\n\r\n        let requestedCollectionsRelations = await fetch(`${window.location.origin}/api/user/collections/relations?userId=${currentUserId}`)\r\n          .then(handleErrors)\r\n          .then(response => response.json())\r\n        setCollectionsRelations(requestedCollectionsRelations)\r\n    } catch (e) {\r\n        onError(e);\r\n    }\r\n  }\r\n\r\n  async function onRemoveCollection(collectionId) {\r\n    try {\r\n        await fetch(`${window.location.origin}/api/user/collections/${collectionId}`, {method: 'DELETE'})\r\n            .then(handleErrors)\r\n\r\n        let requestedCollectionsRelations = await fetch(`${window.location.origin}/api/user/collections/relations?userId=${currentUserId}`)\r\n            .then(handleErrors)\r\n            .then(response => response.json())\r\n        setCollectionsRelations(requestedCollectionsRelations)\r\n    } catch (e) {\r\n        onError(e);\r\n    }\r\n  }\r\n\r\n  function renderCollectionsList(collectionsRelations) {\r\n    let loggedUserId = userId.replace(/\"/g, \"\")\r\n    let viewLoggedUser = currentUserId === loggedUserId\r\n\r\n    return [{}].concat(collectionsRelations).map((collectionRelation, i) =>\r\n      i !== 0 && (\r\n        <Container>\r\n          <Row>\r\n            <Col sm={8}>\r\n              <LinkContainer key={collectionRelation.collection.id} to={`/collections/${collectionRelation.collection.id}?userId=${currentUserId}`}>\r\n                <ListGroupItem variant={collectionRelation.belongsToUser ? \"success\" : \"danger\"} action>\r\n                  <Row>\r\n                    <Col sm={4}>\r\n                      <Image src={`collections/${collectionRelation.collection.image}`} thumbnail />\r\n                    </Col>\r\n                    <Col sm={8}>\r\n                      <h2><strong>{collectionRelation.collection.name}</strong></h2>\r\n                      <h3>{collectionRelation.collection.description}</h3>\r\n                    </Col>\r\n                  </Row>\r\n                </ListGroupItem>\r\n              </LinkContainer>\r\n            </Col>\r\n            <Col sm={4}>\r\n                <Button \r\n                    variant={collectionRelation.belongsToUser ? \"danger\" : \"success\"} \r\n                    onClick={() => collectionRelation.belongsToUser ? onRemoveCollection(collectionRelation.collection.id) : onAddCollection(collectionRelation.collection.id)} \r\n                    size=\"lg\"\r\n                    disabled={!viewLoggedUser}\r\n                >\r\n                    {collectionRelation.belongsToUser ? 'Remove' : 'Add'}\r\n                </Button>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <br></br>\r\n          </Row>\r\n        </Container>\r\n      ) \r\n    );\r\n  }\r\n\r\n  function renderCollections() {\r\n    return (\r\n      <Container>\r\n        <ListGroup variant=\"flush\">\r\n          {!isLoading && renderCollectionsList(collectionsRelations)}\r\n        </ListGroup>\r\n      </Container>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      {userId && renderCollections()}\r\n    </Container>\r\n  );\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport { ListGroup, ListGroupItem, Button, Container, Row, Col } from \"react-bootstrap\";\r\nimport { FormGroup, FormControl, FormLabel } from \"react-bootstrap\";\r\nimport Image from 'react-bootstrap/Image';\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { useParams, useLocation } from \"react-router-dom\";\r\nimport { useAppContext } from \"../libs/contextLib\";\r\nimport { handleErrors, onError } from \"../libs/errorLib\";\r\nimport \"./CollectionPage.css\"\r\n\r\nfunction useQuery() {\r\n    return new URLSearchParams(useLocation().search);\r\n}\r\n\r\nfunction useFormFields(initialState) {\r\n    const [fields, setValues] = useState(initialState);\r\n  \r\n    return [\r\n      fields,\r\n      function(newFields) {\r\n        setValues(newFields);\r\n      },\r\n      function(event, stickerId) {\r\n        setValues({...fields, [stickerId]: {\"count\": +event.target.value, \"changed\": true}});\r\n      }\r\n    ];\r\n}\r\n\r\nexport default function CollectionPage() {\r\n    const { id } = useParams();\r\n    const query = useQuery();\r\n    const { userId } = useAppContext();\r\n    const [collection, setCollection] = useState(null);\r\n    const [stickers, setStickers] = useState([])\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [stickersCounts, setStickersCounts, handleCountChange] = useFormFields({});\r\n    const [user, setUser] = useState(null);\r\n    var currentUserId = query.get(\"userId\") \r\n    if (currentUserId === undefined) {\r\n        currentUserId = userId.replace(/\"/g, \"\")\r\n    }\r\n\r\n    useEffect(() => {\r\n        async function onLoad() {\r\n            try {\r\n                if (!userId) {\r\n                    return\r\n                }\r\n\r\n                let requestedUser = await fetch(`${window.location.origin}/api/auth/user/${currentUserId}`)\r\n                    .then(handleErrors)\r\n                    .then(response => response.json())\r\n                setUser(requestedUser);\r\n\r\n                let requestedCollection = await fetch(`${window.location.origin}/api/collections/${id}`)\r\n                    .then(handleErrors)\r\n                    .then(response => response.json())\r\n                setCollection(requestedCollection);\r\n\r\n                let stickersRelations = await fetch(`${window.location.origin}/api/user/stickers/relations?collectionId=${id}&userId=${currentUserId}`)\r\n                    .then(handleErrors)\r\n                    .then(response => response.json())\r\n                setStickers(stickersRelations)\r\n\r\n                var stickersCountsDict = {}\r\n                stickersRelations.forEach(stickerRelation => \r\n                    stickersCountsDict[stickerRelation.sticker.id] = {\"count\": stickerRelation.count, \"changed\": false}\r\n                )\r\n                setStickersCounts(stickersCountsDict)\r\n            } catch (e) {\r\n                onError(e);\r\n            }\r\n\r\n            setIsLoading(false)\r\n        }\r\n\r\n        onLoad();\r\n    }, [id, userId]);\r\n\r\n    async function onAddSticker(stickerId) {\r\n        try {\r\n            await fetch(`${window.location.origin}/api/user/stickers/${stickerId}?count=0`, {method: 'PUT'})\r\n                .then(handleErrors)\r\n\r\n            let collectionStickers = await fetch(`${window.location.origin}/api/user/stickers/relations?collectionId=${id}&userId=${currentUserId}`)\r\n                .then(handleErrors)\r\n                .then(response => response.json())\r\n            setStickers(collectionStickers)\r\n        } catch (e) {\r\n            onError(e);\r\n        }\r\n    }\r\n    \r\n    async function onRemoveSticker(stickerId) {\r\n        try {\r\n            await fetch(`${window.location.origin}/api/user/stickers/${stickerId}`, {method: 'DELETE'})\r\n                .then(handleErrors)\r\n\r\n            let collectionStickers = await fetch(`${window.location.origin}/api/user/stickers/relations?collectionId=${id}&userId=${currentUserId}`)\r\n                .then(handleErrors)\r\n                .then(response => response.json())\r\n            setStickers(collectionStickers)\r\n            setStickersCounts({...stickersCounts, [stickerId]: {\"count\": 0, \"changed\": false}})\r\n        } catch (e) {\r\n            onError(e);\r\n        }\r\n    }\r\n\r\n    async function handleUpdate(stickerId) {\r\n        try {\r\n            if (stickersCounts[stickerId].count >= 0) {\r\n                await fetch(`${window.location.origin}/api/user/stickers/update/${stickerId}?count=${stickersCounts[stickerId].count}`, { method: 'PUT' })\r\n                    .then(handleErrors)\r\n                setStickersCounts({...stickersCounts, [stickerId]: {\"count\": stickersCounts[stickerId].count, \"changed\": false}})\r\n            } else {\r\n                onError(\"Count for exchange must be >= 0\")\r\n            }\r\n        } catch (e) {\r\n            onError(e)\r\n        }\r\n    }\r\n\r\n    function renderStickersList(stickersRelations) {\r\n        let loggedUserId = userId.replace(/\"/g, \"\")\r\n        let viewLoggedUser = currentUserId === loggedUserId\r\n\r\n        return [{}].concat(stickersRelations).map((stickerRelation, i) =>\r\n          i !== 0 && (\r\n        <Container>\r\n          <Row>\r\n            <Col sm={6}>\r\n              <LinkContainer key={stickerRelation.sticker.id} to={`../stickers/${stickerRelation.sticker.id}`}>\r\n                <ListGroupItem variant={stickerRelation.belongsToUser ? \"success\" : \"danger\"} action>\r\n                  <Row>\r\n                    <Col sm={4}>\r\n                      <Image src={`../stickers/${stickerRelation.sticker.image}`} thumbnail />\r\n                    </Col>\r\n                    <Col sm={8}>\r\n                      <h2><strong>{stickerRelation.sticker.number}</strong></h2>\r\n                      {stickerRelation.sticker.description}\r\n                    </Col>\r\n                  </Row>\r\n                </ListGroupItem>\r\n              </LinkContainer>\r\n            </Col>\r\n            <Col sm={2}>\r\n                <Button \r\n                    variant={stickerRelation.belongsToUser ? \"danger\" : \"success\"}\r\n                    onClick={() => stickerRelation.belongsToUser ? onRemoveSticker(stickerRelation.sticker.id) : onAddSticker(stickerRelation.sticker.id)} \r\n                    size=\"lg\"\r\n                    disabled={!viewLoggedUser}\r\n                >\r\n                    {stickerRelation.belongsToUser ? 'Remove' : 'Add'}\r\n                </Button>\r\n            </Col>\r\n            <Col sm=\"auto\">\r\n                <FormGroup controlId=\"count\">\r\n                    <FormLabel>Count for exchange</FormLabel>\r\n                    <FormControl \r\n                        type=\"number\" \r\n                        value={stickersCounts[stickerRelation.sticker.id].count} \r\n                        onChange={(event) => handleCountChange(event, stickerRelation.sticker.id)}\r\n                        disabled={!viewLoggedUser || stickerRelation.belongsToUser === false} \r\n                    />\r\n                </FormGroup>\r\n                <Button\r\n                    block\r\n                    disabled={!viewLoggedUser || stickerRelation.belongsToUser === false || !stickersCounts[stickerRelation.sticker.id].changed}\r\n                    onClick={() => handleUpdate(stickerRelation.sticker.id)}\r\n                >\r\n                    Update\r\n                </Button>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n              <br></br>\r\n          </Row>             \r\n        </Container>\r\n          ) \r\n        );\r\n    }\r\n\r\n    return (\r\n        <Container className=\"form\">\r\n            {userId && collection && \r\n            <Container className=\"form\">\r\n                <Row className=\"justify-content-md-center\">\r\n                    <h3>\r\n                        {collection.name}\r\n                    </h3>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        <Image src={collection.image} thumbnail />\r\n                    </Col>\r\n                    <Col>\r\n                        <h2>\r\n                            <strong>Collector:</strong>\r\n                        </h2>\r\n                        <LinkContainer key={user.id} to={`../../users/${user.id}`}>\r\n                            <Button variant=\"secondary\" size=\"lg\">\r\n                                {user.name}\r\n                            </Button>\r\n                        </LinkContainer>\r\n                        <h2>\r\n                            <strong>Number of stickers:</strong>\r\n                        </h2>\r\n                        <h2>\r\n                             {collection.numberOfStickers}\r\n                        </h2>\r\n                        <h2>\r\n                            <strong>Description:</strong> \r\n                        </h2>\r\n                        <h2>\r\n                            {collection.description}\r\n                        </h2>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <ListGroup variant=\"flush\">\r\n                        {!isLoading && renderStickersList(stickers)}\r\n                    </ListGroup>\r\n                </Row>\r\n            </Container>\r\n            }\r\n        </Container>\r\n    );\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport { Container, Row, Col, Button } from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\"\r\nimport Image from 'react-bootstrap/Image'\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useAppContext } from \"../libs/contextLib\";\r\nimport { handleErrors, onError } from \"../libs/errorLib\";\r\nimport \"./StickerPage.css\"\r\n\r\nexport default function StickerPage() {\r\n    const { userId } = useAppContext();\r\n    const { id } = useParams();\r\n    const [sticker, setSticker] = useState(null);\r\n    const [users, setUsers] = useState([])\r\n\r\n    useEffect(() => {\r\n        async function onLoad() {\r\n            if (!userId) {\r\n                return\r\n            }\r\n\r\n            try {\r\n                let requestedSticker = await fetch(`${window.location.origin}/api/stickers/${id}`)\r\n                    .then(handleErrors)\r\n                    .then(response => response.json())\r\n                setSticker(requestedSticker);\r\n\r\n                let usersHavingSticker = await fetch(`${window.location.origin}/api/user/stickers/users_by/${id}`)\r\n                    .then(handleErrors)\r\n                    .then(response => response.json())\r\n                setUsers(usersHavingSticker)\r\n            } catch (e) {\r\n                onError(e);\r\n            }\r\n        }\r\n\r\n        onLoad();\r\n    }, [id, userId]);\r\n\r\n    function renderUsersList(users) {\r\n        return [{}].concat(users).map((user, i) =>\r\n        i !== 0 && (\r\n            <Col sm=\"auto\">\r\n                <LinkContainer key={user.id} to={`../../users/${user.id}`}>\r\n                    <Button variant=\"secondary\" size=\"lg\">\r\n                        {user.name}\r\n                    </Button>\r\n                 </LinkContainer>\r\n            </Col>\r\n        ))\r\n    }\r\n\r\n    return (\r\n        <Container className=\"form\">\r\n            {userId && sticker && (\r\n                <Container>\r\n                    <Row className=\"justify-content-md-center\">\r\n                        <h3>\r\n                            {sticker.number}\r\n                        </h3>\r\n                    </Row>\r\n                    <Row className=\"info\">\r\n                        <Col className=\"left\">\r\n                            <Image src={sticker.image} thumbnail />\r\n                        </Col>\r\n                        <Col className=\"right\">\r\n                            <h2>\r\n                                <strong>Description</strong> {sticker.description}\r\n                            </h2>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <h2>\r\n                            <strong>Collectors having this sticker:</strong>\r\n                        </h2>\r\n                    </Row>\r\n                    <Row>\r\n                        {renderUsersList(users)}\r\n                    </Row>\r\n                </Container>\r\n            )}\r\n        </Container>\r\n    );\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport { ListGroup, ListGroupItem, Row, Col, Container } from \"react-bootstrap\"\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useAppContext } from \"../libs/contextLib\"\r\nimport { handleErrors, onError } from \"../libs/errorLib\";\r\nimport \"./UserPage.css\"\r\n\r\nexport default function UserPage() {\r\n    const { id } = useParams();\r\n    const { userId } = useAppContext();\r\n    const [user, setUser] = useState(null);\r\n    const [collections, setCollections] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        async function onLoad() {\r\n            if (!userId) {\r\n                return;\r\n            }\r\n\r\n            try {\r\n                let requestedUser = await fetch(`${window.location.origin}/api/auth/user/${id}`)\r\n                    .then(handleErrors)\r\n                    .then(response => response.json())\r\n                setUser(requestedUser);\r\n\r\n                let userCollections = await fetch(`${window.location.origin}/api/user/collections?userId=${id}`)\r\n                    .then(handleErrors)\r\n                    .then(response => response.json())\r\n                setCollections(userCollections)\r\n            } catch (e) {\r\n                onError(e);\r\n            }\r\n\r\n            setIsLoading(false);\r\n        }\r\n\r\n        onLoad();\r\n    }, [id, userId]);\r\n\r\n    function renderCollectionsList(collections) {\r\n        return [{}].concat(collections).map((collection, i) =>\r\n          i !== 0 && (\r\n            <LinkContainer key={collection.id} to={`/collections/${collection.id}?userId=${id}`}>\r\n              <ListGroupItem variant=\"primary\" action>\r\n                 {collection.name}\r\n              </ListGroupItem>\r\n            </LinkContainer>\r\n          ) \r\n        );\r\n    }    \r\n\r\n    return (\r\n        <Container className=\"form\">\r\n            {user && (\r\n                <Container className=\"form\">\r\n                    <Row>\r\n                        <Col>\r\n                            <h3>\r\n                                <strong>Collector's name:</strong>\r\n                            </h3>\r\n                            <h2>\r\n                                {user.name}\r\n                            </h2>\r\n                            <h3>\r\n                                <strong>Email:</strong> \r\n                            </h3>\r\n                            <h2>\r\n                                {user.email}\r\n                            </h2>\r\n                        </Col>\r\n                        <Col>\r\n                            <h3>\r\n                                <strong>Collections</strong>\r\n                            </h3>\r\n                            <h2>\r\n                                <ListGroup variant=\"flush\">\r\n                                    {!isLoading && renderCollectionsList(collections)}\r\n                                </ListGroup>\r\n                            </h2>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            )}\r\n        </Container>\r\n    );\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport { ListGroup, ListGroupItem, Row, Container } from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { useAppContext } from \"../libs/contextLib\";\r\nimport { handleErrors, onError } from \"../libs/errorLib\";\r\nimport \"./Users.css\";\r\n\r\nexport default function Users() {\r\n  const [users, setUsers] = useState([]);\r\n  const { userId } = useAppContext();\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  \r\n  useEffect(() => {\r\n    async function onLoad() {\r\n      if (!userId) {\r\n        return;\r\n      }\r\n  \r\n      try {\r\n        let requestedUsers = await fetch(`${window.location.origin}/api/auth/users`)\r\n          .then(handleErrors)\r\n          .then(response => response.json())\r\n        setUsers(requestedUsers)\r\n      } catch (e) {\r\n        onError(e);\r\n      }\r\n  \r\n      setIsLoading(false);\r\n    }\r\n  \r\n    onLoad();\r\n  }, [userId]);\r\n\r\n  function renderUsersList(users) {\r\n    return [{}].concat(users).map((user, i) =>\r\n      i !== 0 && (\r\n        <Container>\r\n          <Row>\r\n            <LinkContainer key={user.id} to={`/users/${user.id}`}>\r\n              <ListGroupItem variant=\"primary\" action>\r\n                <Row>\r\n                  <h2><strong>{user.name}</strong></h2>\r\n                </Row>\r\n              </ListGroupItem>\r\n            </LinkContainer>\r\n          </Row>\r\n          <Row>\r\n            <br></br>\r\n          </Row>\r\n        </Container>\r\n      ) \r\n    );\r\n  }\r\n\r\n  function renderUsers() {\r\n    return (\r\n      <div>\r\n        <ListGroup variant=\"flush\">\r\n          {!isLoading && renderUsersList(users)}\r\n        </ListGroup>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {userId && renderUsers()}\r\n    </div>\r\n  );\r\n}","import React from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport Home from \"./containers/Home\";\r\nimport NotFound from \"./containers/NotFound\";\r\nimport Login from \"./containers/Login\";\r\nimport Signup from \"./containers/Signup\";\r\nimport AuthenticatedRoute from \"./components/AuthenticatedRoute\";\r\nimport UnauthenticatedRoute from \"./components/UnauthenticatedRoute\";\r\nimport Collections from \"./containers/Collections\"\r\nimport CollectionPage from \"./containers/CollectionPage\";\r\nimport StickerPage from \"./containers/StickerPage\";\r\nimport UserPage from \"./containers/UserPage\";\r\nimport Users from \"./containers/Users\";\r\n\r\nexport default function Routes() {\r\n    return (\r\n        <Switch>\r\n            <Route exact path=\"/\">\r\n                <Home />\r\n            </Route>\r\n            <AuthenticatedRoute exact path=\"/collections\">\r\n                <Collections />\r\n            </AuthenticatedRoute>\r\n            <AuthenticatedRoute exact path=\"/collections/:id\">\r\n                <CollectionPage />\r\n            </AuthenticatedRoute>\r\n            <AuthenticatedRoute exact path=\"/stickers/:id\">\r\n                <StickerPage/>\r\n            </AuthenticatedRoute>\r\n            <AuthenticatedRoute exact path=\"/home\">\r\n                <Home />\r\n            </AuthenticatedRoute>\r\n            <AuthenticatedRoute exact path=\"/users\">\r\n                <Users />\r\n            </AuthenticatedRoute>\r\n            <AuthenticatedRoute exact path=\"/users/:id\">\r\n                <UserPage />\r\n            </AuthenticatedRoute>\r\n            <UnauthenticatedRoute exact path=\"/login\">\r\n                <Login />\r\n            </UnauthenticatedRoute>\r\n            <UnauthenticatedRoute exact path=\"/signup\">\r\n                <Signup />\r\n            </UnauthenticatedRoute>\r\n            <Route>\r\n                <NotFound />\r\n            </Route>\r\n\r\n        </Switch>\r\n    );\r\n}","import React, { useState, useEffect } from \"react\";\nimport { AppContext } from \"./libs/contextLib\";\nimport { Nav, Navbar } from \"react-bootstrap\";\nimport { useHistory } from \"react-router-dom\";\nimport { handleErrors } from \"./libs/errorLib\";\nimport Routes from \"./Routes\";\nimport \"./App.css\"\n\nfunction App() {\n  const history = useHistory();\n  const [isAuthenticating, setIsAuthenticating] = useState(true);\n  const [userId, setUserId] = useState(null);\n  \n  async function handleCurrentSessionResponse(response) {\n    let responseText = await response.text()\n    if (!response.ok) {\n      throw Error(responseText);\n    }\n    return responseText;\n  }\n\n  useEffect(() => {\n    async function onLoad() {\n      try {\n        let id = await fetch(`${window.location.origin}/api/auth/check_session`)\n          .then(handleCurrentSessionResponse)\n        setUserId(id);\n      }\n      catch (e) {\n        console.log(e)\n      }\n    \n      setIsAuthenticating(false);\n    }\n\n    onLoad();\n  }, []);\n\n  function handleUsers() {\n    history.push(\"/users\")\n  }\n\n  function handleCollections() {\n    history.push(`/collections?userId=${userId.replace(/\"/g, \"\")}`)\n  }\n\n  async function handleLogout() {\n    await fetch(`${window.location.origin}/api/auth/sign_out`, { method: 'DELETE' }).then(handleErrors);\n    setUserId(null);\n    history.push(\"/login\");\n  }\n\n  return (\n    !isAuthenticating &&\n    <div className=\"App container\">\n      <Navbar expand=\"lg\" bg=\"dark\" variant=\"dark\">\n        <Navbar.Brand href=\"/\"><h1>Stickers exchanger</h1></Navbar.Brand>\n        <Nav className=\"mr-auto\">\n          {userId\n            ? <>\n              <Nav.Link onClick={handleUsers}><h3>Users</h3></Nav.Link>\n              <Nav.Link onClick={handleCollections}><h3>Collections</h3></Nav.Link>\n              <Nav.Link onClick={handleLogout}><h3>Logout</h3></Nav.Link>\n            </>\n            : <>\n              <Nav.Link href=\"login\"><h3>Login</h3></Nav.Link>\n              <Nav.Link href=\"signup\"><h3>Sign up</h3></Nav.Link>\n            </>\n          }\n        </Nav>\n      </Navbar>\n      <AppContext.Provider value={{ userId, setUserId }}>\n        <Routes />\n      </AppContext.Provider>\n    </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}